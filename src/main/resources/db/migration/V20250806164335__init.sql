CREATE TABLE IF NOT EXISTS users (id BIGSERIAL PRIMARY KEY, social_type VARCHAR(50) NOT NULL, social_id VARCHAR(100) NULL, nickname VARCHAR(20) NOT NULL, profile_image_url VARCHAR(255) NULL, "role" VARCHAR(255) NOT NULL, is_deleted BOOLEAN NOT NULL DEFAULT FALSE, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS admin_posts (id BIGSERIAL PRIMARY KEY, title VARCHAR(100) NOT NULL, "content" TEXT NOT NULL, post_type VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, writer BIGINT NOT NULL, CONSTRAINT fk_admin_posts_writer__id FOREIGN KEY (writer) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS alcoholcategories (id SERIAL PRIMARY KEY, "name" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS alcohollocations (id SERIAL PRIMARY KEY, "name" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS alcoholstyles (id SERIAL PRIMARY KEY, category_id INT NOT NULL, "name" VARCHAR(255) NOT NULL, CONSTRAINT fk_alcoholstyles_category_id__id FOREIGN KEY (category_id) REFERENCES alcoholcategories(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS alcoholrequests (id SERIAL PRIMARY KEY, "name" VARCHAR(255) NOT NULL, proof SMALLINT NOT NULL, category_id INT NOT NULL, style_id INT NOT NULL, location_id INT NULL, user_id BIGINT NOT NULL, image_url TEXT NULL, status VARCHAR(20) NOT NULL, "content" TEXT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, CONSTRAINT fk_alcoholrequests_category_id__id FOREIGN KEY (category_id) REFERENCES alcoholcategories(id) ON DELETE RESTRICT ON UPDATE RESTRICT, CONSTRAINT fk_alcoholrequests_style_id__id FOREIGN KEY (style_id) REFERENCES alcoholstyles(id) ON DELETE RESTRICT ON UPDATE RESTRICT, CONSTRAINT fk_alcoholrequests_location_id__id FOREIGN KEY (location_id) REFERENCES alcohollocations(id) ON DELETE RESTRICT ON UPDATE RESTRICT, CONSTRAINT fk_alcoholrequests_user_id__id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS "comments" (id SERIAL PRIMARY KEY, user_id BIGINT NOT NULL, target_type VARCHAR(20) NOT NULL, target_id INT NOT NULL, parent_id INT NULL, body TEXT NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS tastingnotes (id SERIAL PRIMARY KEY, alcohol_id INT NOT NULL, user_id BIGINT NOT NULL, comment_id INT NOT NULL, title VARCHAR(255) NOT NULL, image_url TEXT NULL, aroma_note JSONB NOT NULL, palate_note JSONB NOT NULL, finish_note JSONB NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS alcohols (id SERIAL PRIMARY KEY, tasting_note_id INT NOT NULL, user_id BIGINT NOT NULL, "name" VARCHAR(255) NOT NULL, image_url TEXT NOT NULL, price DECIMAL(20, 5) NOT NULL, proof SMALLINT NOT NULL, category_id INT NOT NULL, style_id INT NOT NULL, location_id INT NOT NULL, "content" TEXT NOT NULL, rating DECIMAL(5, 2) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS flavorcategories (id SERIAL PRIMARY KEY, "name" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS flavorkeywords (id SERIAL PRIMARY KEY, category_id INT NOT NULL, "name" VARCHAR(255) NOT NULL, CONSTRAINT fk_flavorkeywords_category_id__id FOREIGN KEY (category_id) REFERENCES flavorcategories(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS inquiries (id BIGSERIAL PRIMARY KEY, title VARCHAR(100) NOT NULL, "content" TEXT NOT NULL, answer TEXT NULL, is_secret CHAR(1) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, writer BIGINT NOT NULL, CONSTRAINT fk_inquiries_writer__id FOREIGN KEY (writer) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS posts (id SERIAL PRIMARY KEY, user_id BIGINT NOT NULL, comment_id INT NOT NULL, title VARCHAR(255) NOT NULL, image_url TEXT NULL, category VARCHAR(20) NOT NULL, body TEXT NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS reactions (id SERIAL PRIMARY KEY, user_id BIGINT NOT NULL, target_type VARCHAR(20) NOT NULL, target_id INT NOT NULL, reaction_type VARCHAR(10) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, CONSTRAINT fk_reactions_user_id__id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS wishes (id SERIAL PRIMARY KEY, user_id BIGINT NOT NULL, alcohol_id INT NOT NULL, created_at TIMESTAMP NOT NULL);
ALTER TABLE "comments" ADD CONSTRAINT fk_comments_user_id__id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "comments" ADD CONSTRAINT fk_comments_parent_id__id FOREIGN KEY (parent_id) REFERENCES "comments"(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE tastingnotes ADD CONSTRAINT fk_tastingnotes_alcohol_id__id FOREIGN KEY (alcohol_id) REFERENCES alcohols(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE tastingnotes ADD CONSTRAINT fk_tastingnotes_user_id__id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE tastingnotes ADD CONSTRAINT fk_tastingnotes_comment_id__id FOREIGN KEY (comment_id) REFERENCES "comments"(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE alcohols ADD CONSTRAINT fk_alcohols_tasting_note_id__id FOREIGN KEY (tasting_note_id) REFERENCES tastingnotes(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE alcohols ADD CONSTRAINT fk_alcohols_user_id__id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE alcohols ADD CONSTRAINT fk_alcohols_category_id__id FOREIGN KEY (category_id) REFERENCES alcoholcategories(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE alcohols ADD CONSTRAINT fk_alcohols_style_id__id FOREIGN KEY (style_id) REFERENCES alcoholstyles(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE alcohols ADD CONSTRAINT fk_alcohols_location_id__id FOREIGN KEY (location_id) REFERENCES alcohollocations(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE posts ADD CONSTRAINT fk_posts_user_id__id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE posts ADD CONSTRAINT fk_posts_comment_id__id FOREIGN KEY (comment_id) REFERENCES "comments"(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE wishes ADD CONSTRAINT fk_wishes_user_id__id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE wishes ADD CONSTRAINT fk_wishes_alcohol_id__id FOREIGN KEY (alcohol_id) REFERENCES alcohols(id) ON DELETE RESTRICT ON UPDATE RESTRICT;
CREATE SEQUENCE IF NOT EXISTS admin_posts_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS AlcoholCategories_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS AlcoholLocations_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS AlcoholRequests_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS AlcoholStyles_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS Alcohols_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS comments_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS FlavorCategories_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS FlavorKeywords_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS inquiries_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS Posts_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS Reactions_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS TastingNotes_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS Users_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS Wishes_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;

ALTER TABLE users
    ALTER COLUMN created_at SET DEFAULT NOW(),
    ALTER COLUMN updated_at SET DEFAULT NOW();